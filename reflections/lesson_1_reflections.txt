How did viewing a diff between two versions of a file help you see the bug that was introduced?

it helps us compare files more easily. We can quickly look up the changes made and check them.

====

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

We can fix bugs more quickly and efficiently. We can also revert more easily if the changes made by us broke the program.

=====

How might using version control make you more confident to make changes that could break something?

We will be more confident to add/modify features since we can revert anytime when something breaks

=====
Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Because git is primed towards development and application related projects which involves managing multiple files.
=====

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

pros:
commits are more logical and streamlined
there are less number of useless commits

cons:
lazy programmer might not commit often enough.
bad habits will have an impact.

=======

How can you use the commands git log and git diff to view the history of files?

git log - can be used to see the history of all the commits made so far

git diff - can be used to compare two commits with each other

=======

Now that you have your workspace set up, what do you want to try using Git for?

For making bigger projects